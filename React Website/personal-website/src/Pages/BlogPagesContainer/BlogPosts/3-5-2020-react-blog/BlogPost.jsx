import React from 'react';
import styles from './BlogPost.module.css';

import SyntaxHighlighter from 'react-syntax-highlighter';
import { ocean as codeTheme } from 'react-syntax-highlighter/dist/esm/styles/hljs';

export default class BlogPost extends React.Component {
    constructor(props) {
        super(props);

        this.state = {
            
        }
    }

    render() {
        return (
            <div className={styles.blogPostContainer}>
                <div className={styles.blogPostContainerInner}>

                    <p className={styles.blogTitle}>React Blog with No Backend</p>
                    <p className={styles.blogPublishDate}>March 5, 2020</p>
                    <div className={styles.divider}></div>

                    <div className={styles.blogPostContentLeft}>

                        <div className={styles.blogSection} style={{ marginTop: 0 }}>
                            <p className={styles.sectionHeader}>Learning Goal</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                In this tutorial, you will learn to create a blog using React. All of the blog posts will be stored 
                                locally, so there is no backend needed. This allows you to publish your site to static hosting sites such as GitHub 
                                Pages. You will want to be comfortable using JavaScript and React for this tutorial.
                            </p>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Create the app</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                To start, initialize a React app. You will need to have Node and NPM installed on your system. You can read more about creating React apps&nbsp;
                                <a href="https://reactjs.org/docs/create-a-new-react-app.html" className={styles.linkText} target="_blank" rel="noopener noreferrer">here</a>.

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> You can name the project anything you would like by changing 'my-app'.

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> You are also installing 'react-router-dom', which is what is used for routing in your app (URLs).
                            </p>

                            <SyntaxHighlighter style={codeTheme}>
                                {codeStringOne}
                            </SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Create the folder structure</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                First, let's create some folders that we will put our files into later on. See the image below for the folders that you should create. Some of these 
                                are automatically generated by the 'create-react-app' command.

                                <br /><br />

                                These are the folders we will be creating in the 'src' folder, which was automatically generated:
                                <div style={{ lineHeight: '20px' }}>
                                    <br /><p className={styles.noMarginText} style={{ marginLeft: 40 }}>- Pages</p>
                                    <br /><p className={styles.noMarginText} style={{ marginLeft: 80 }}>-> BlogPagesContainer</p>
                                    <br /><p className={styles.noMarginText} style={{ marginLeft: 120 }}>--> BlogPostPage</p>
                                    <br /><p className={styles.noMarginText} style={{ marginLeft: 120 }}>--> BlogPosts</p>
                                    <br /><p className={styles.noMarginText} style={{ marginLeft: 120 }}>--> PostsListPage</p>
                                </div>
                            </p>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Create the blog post page</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                This page will be where we render the content for the blog post. In the render function, we attempt to load the blog post using 'require'. We get the 
                                blog post ID from the URL parameter 'id', and pass that to the 'require' function. If there is an error (usually when the ID is invalid), we will
                                navigate back to the blog page, which we will create later.

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> Create this file in the 'BlogPostPage' folder. Call the file 'BlogPostPage.jsx', and add a 'BlogPostPage.module.css' 
                                file for styling.
                            </p>

                            <SyntaxHighlighter showLineNumbers style={codeTheme}>
                                {codeStringTwo}
                            </SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Create a blog post!</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                To create a blog post, we will create a folder with the ID that we want for the blog post (this ID will show up in the URL). Then, we create a file called 
                                'BlogPost.jsx' and 'BlogPost.module.css' (to style the page, feel free to style it however you would like).

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> Create this folder in the 'BlogPosts' folder. Call the folder whatever you would like the ID (that will show up 
                                in the URL) to be. In this folder, create 'BlogPost.jsx' and 'BlogPost.module.css'. Copy the contents below into 'BlogPost.jsx'.
                            </p>

                            <SyntaxHighlighter language="javascript" showLineNumbers style={codeTheme}>
                                {codeStringThree}
                            </SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Set up routing</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                Now, we will set up routing for the React app. This will allow URLs such as 'example.com/blog/ID_HERE' to show the blog post with the given ID. We are also 
                                going to initialize a blog page, which will be set up in the next steps. This page will have a list of the blog posts.

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> Paste the contents below into 'App.js', which is inside the automatically generated 'src' folder.


                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> At this point, you may see an error. This is because you have not yet created the PostsListPage, which will be 
                                created below.
                            </p>

                            <SyntaxHighlighter language="javascript" showLineNumbers style={codeTheme}>
                                {codeStringFour}
                            </SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Add a PostData file</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                               Now, in the same directory where you have your blog post folders, create a file called 'PostsData.jsx'. Here, we will store an array containing data about all of our 
                               blog posts. Remember to update this file when you create a new blog post!

                                <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> Create this file in the 'BlogPosts' folder. Title it 'PostsData.jsx'.
                            </p>

                            <SyntaxHighlighter language="javascript" showLineNumbers style={codeTheme}>
                                {codeStringFive}
                            </SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Create a blog posts list page</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                               Now, create a 'PostsListPage.jsx' and 'PostListPage.module.css' (or use any method you would like to style your page). In this file, we will import the posts from 
                               the PostData file we just created. We will then loop over this array using a map, and create a tile for each blog post.

                               <br /><br />

                                <b style={{ color: '#ffffff' }}>Note:</b> Create 'PostsListPage.jsx' and 'PostListPage.module.css' in the 'PostsListPage' folder.
                            </p>

							<SyntaxHighlighter showLineNumbers style={codeTheme}>
								{codeStringSix}
							</SyntaxHighlighter>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>All done!</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                               You now have a functioning blog! Just repeat some of the steps above to create a new blog post, and don't forget to update PostsData!
                               
                                <br /><br />

                               	See the picture below for the file structure you should have, along with the link to the GitHub repo.
                               	<br /><br />

								<a href="https://github.com/jake-short/react-blog-tutorial/" target="_blank" rel="noopener noreferrer" style={{ textDecoration: 'none', display: 'inline-block' }}>
									<div className={styles.githubButton}>
										<ion-icon name="logo-github"></ion-icon>

										<p className={styles.buttonText} style={{ marginLeft: 12 }}>View on GitHub</p>
									</div>
								</a>

								<br />

								<a href="https://jakeshort.dev/react-blog-tutorial/#/" target="_blank" rel="noopener noreferrer" style={{ textDecoration: 'none', display: 'inline-block', marginTop: '25px' }}>
									<div className={styles.githubButton}>
										<ion-icon name="flash"></ion-icon>

										<p className={styles.buttonText} style={{ marginLeft: 12 }}>Live Demo</p>
									</div>
								</a>
                            </p>
                        </div>

                    </div>

                </div>
            </div>
        )
    }
}

const codeStringOne = `npx create-react-app my-app
cd my-app
npm start
npm install react-router-dom`;

const codeStringTwo = `import React from 'react';
import styles from './BlogPostPage.module.css';

export default class BlogPostPage extends React.Component {
    render() {
        let BlogPost = null;

        try {
            BlogPost = require('../BlogPosts/' + this.props.match.params.id + '/BlogPost').default;
        } catch {
            this.props.history.push('/blog');
        }

        return (
            <React.Fragment>
                <div className={styles.mainContentContainer}>
                    {/** Show blog post here */}
                    <div className={styles.blogPostContainer}>
                        {BlogPost ?
                        <BlogPost /> : null}
                    </div>
                </div>
            </React.Fragment>
        )
    }
}`;

const codeStringThree = `import React from 'react';
import styles from './BlogPost.module.css';

export default class BlogPost extends React.Component {
    render() {
        return (
            <div className={styles.blogPostContainer}>
                <div className={styles.blogPostContainerInner}>

                    <p className={styles.blogTitle}>Sample Title</p>
                    <p className={styles.blogPublishDate}>March 5, 2020</p>
                    <div className={styles.divider}></div>

                    <div className={styles.blogPostContentLeft}>

                        <div className={styles.blogSection} style={{ marginTop: 0 }}>
                            <p className={styles.sectionHeader}>Learning Goal</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                Sample description text.
                            </p>
                        </div>

                        <div className={styles.blogSection}>
                            <p className={styles.sectionHeader}>Blog post section header</p>
                            <div className={styles.sectionDivider}></div>
                            <p className={styles.sectionBody}>
                                Create your first blog post now!
                            </p>
                        </div>

                    </div>

                </div>
            </div>
        )
    }
}`;

const codeStringFour = `import React from 'react';
import './App.css';
import { HashRouter as Router, Switch, Route } from 'react-router-dom';

import PostsListPage from './Pages/BlogPagesContainer/PostsListPage/PostsListPage';
import BlogPostPage from './Pages/BlogPagesContainer/BlogPostPage/BlogPostPage';

export default function App() {
    return (
        <Router>
            <Switch>
                <Route exact path="/" component={PostsListPage} />
                <Route exact path="/blog" component={PostsListPage} />
                <Route exact path="/blog/post/:id" component={BlogPostPage} />
            </Switch>
        </Router>
    );
}`;

const codeStringFive = `export const FeaturedItems = [
    {
        'title': 'React Blog with No Backend',
        'description': 'Build a blog in ReactJS without any backend.',
        'tags': ['react', 'no backend', 'javascript', 'blog'],
        'postFileName': '3-5-2020-react-blog',
    }
]`;

const codeStringSix = `import React from 'react';
import { Link } from 'react-router-dom';
import styles from './PostsListPage.module.css';

// Import blog posts
import { FeaturedItems } from '../BlogPosts/PostsData';

export default class PostsListPage extends React.Component {
    render() {
        var featuredItems = FeaturedItems.map((item, index) => {
            return (
                <Link to={'/blog/post/' + item.postFileName} style={{ textDecoration: 'none' }}>
                    <div className={styles.postCard}>
                        <p className={styles.postCardTitle}>{item.title}</p>
                        <p className={styles.postCardDescription}>{item.description}</p>
                    </div>
                </Link>
            )
        });

        return (
            <React.Fragment>
                <div className={styles.mainContentContainer}>
                    {/** Show all posts here */}
                    <div className={styles.postCardsContainer}>
                        <div className={styles.postCardsContainerInner}>

                            {featuredItems}

                        </div>
                    </div>
                </div>
            </React.Fragment>
        )
    }
}`;